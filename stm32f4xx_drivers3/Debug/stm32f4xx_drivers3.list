
stm32f4xx_drivers3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004ec  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000674  0800067c  0000167c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000674  08000674  0000167c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000674  08000674  0000167c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000674  0800067c  0000167c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000674  08000674  00001674  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000678  08000678  00001678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000167c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000167c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0000167c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000870  00000000  00000000  000016a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000242  00000000  00000000  00001f16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00002158  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000007e  00000000  00000000  00002210  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000013af  00000000  00000000  0000228e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d22  00000000  00000000  0000363d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000053f1  00000000  00000000  0000435f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00009750  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000224  00000000  00000000  00009794  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000068  00000000  00000000  000099b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800065c 	.word	0x0800065c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	0800065c 	.word	0x0800065c

080001c8 <delay>:
 *  Created on: Jul 26, 2025
 *      Author: yig88
 */
#include "stm32f407xx.h"
#include "stm32f407xx_gpio.h"
void delay(void){
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i<500000; i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	@ (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	bc80      	pop	{r7}
 80001ec:	4770      	bx	lr
 80001ee:	bf00      	nop
 80001f0:	0007a11f 	.word	0x0007a11f

080001f4 <main>:
int main(void){
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b084      	sub	sp, #16
 80001f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOD;
 80001fa:	4b0e      	ldr	r3, [pc, #56]	@ (8000234 <main+0x40>)
 80001fc:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_No_12;
 80001fe:	230c      	movs	r3, #12
 8000200:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000202:	2301      	movs	r3, #1
 8000204:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000206:	2302      	movs	r3, #2
 8000208:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800020a:	2300      	movs	r3, #0
 800020c:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800020e:	2300      	movs	r3, #0
 8000210:	72fb      	strb	r3, [r7, #11]
	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000212:	2101      	movs	r1, #1
 8000214:	4807      	ldr	r0, [pc, #28]	@ (8000234 <main+0x40>)
 8000216:	f000 f901 	bl	800041c <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 800021a:	1d3b      	adds	r3, r7, #4
 800021c:	4618      	mov	r0, r3
 800021e:	f000 f834 	bl	800028a <GPIO_Init>
	while(1){
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_No_12);
 8000222:	210c      	movs	r1, #12
 8000224:	4803      	ldr	r0, [pc, #12]	@ (8000234 <main+0x40>)
 8000226:	f000 f9e1 	bl	80005ec <GPIO_ToggleOutputPin>
		delay();
 800022a:	f7ff ffcd 	bl	80001c8 <delay>
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_No_12);
 800022e:	bf00      	nop
 8000230:	e7f7      	b.n	8000222 <main+0x2e>
 8000232:	bf00      	nop
 8000234:	40020c00 	.word	0x40020c00

08000238 <Reset_Handler>:
 8000238:	480d      	ldr	r0, [pc, #52]	@ (8000270 <LoopForever+0x2>)
 800023a:	4685      	mov	sp, r0
 800023c:	f3af 8000 	nop.w
 8000240:	480c      	ldr	r0, [pc, #48]	@ (8000274 <LoopForever+0x6>)
 8000242:	490d      	ldr	r1, [pc, #52]	@ (8000278 <LoopForever+0xa>)
 8000244:	4a0d      	ldr	r2, [pc, #52]	@ (800027c <LoopForever+0xe>)
 8000246:	2300      	movs	r3, #0
 8000248:	e002      	b.n	8000250 <LoopCopyDataInit>

0800024a <CopyDataInit>:
 800024a:	58d4      	ldr	r4, [r2, r3]
 800024c:	50c4      	str	r4, [r0, r3]
 800024e:	3304      	adds	r3, #4

08000250 <LoopCopyDataInit>:
 8000250:	18c4      	adds	r4, r0, r3
 8000252:	428c      	cmp	r4, r1
 8000254:	d3f9      	bcc.n	800024a <CopyDataInit>
 8000256:	4a0a      	ldr	r2, [pc, #40]	@ (8000280 <LoopForever+0x12>)
 8000258:	4c0a      	ldr	r4, [pc, #40]	@ (8000284 <LoopForever+0x16>)
 800025a:	2300      	movs	r3, #0
 800025c:	e001      	b.n	8000262 <LoopFillZerobss>

0800025e <FillZerobss>:
 800025e:	6013      	str	r3, [r2, #0]
 8000260:	3204      	adds	r2, #4

08000262 <LoopFillZerobss>:
 8000262:	42a2      	cmp	r2, r4
 8000264:	d3fb      	bcc.n	800025e <FillZerobss>
 8000266:	f000 f9d5 	bl	8000614 <__libc_init_array>
 800026a:	f7ff ffc3 	bl	80001f4 <main>

0800026e <LoopForever>:
 800026e:	e7fe      	b.n	800026e <LoopForever>
 8000270:	20020000 	.word	0x20020000
 8000274:	20000000 	.word	0x20000000
 8000278:	20000000 	.word	0x20000000
 800027c:	0800067c 	.word	0x0800067c
 8000280:	20000000 	.word	0x20000000
 8000284:	2000001c 	.word	0x2000001c

08000288 <ADC_IRQHandler>:
 8000288:	e7fe      	b.n	8000288 <ADC_IRQHandler>

0800028a <GPIO_Init>:
	* @param  *pGPIOHandle : pointer to the GPIO handle struct
	* @param
	* @param
	* @return None
	*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 800028a:	b480      	push	{r7}
 800028c:	b085      	sub	sp, #20
 800028e:	af00      	add	r7, sp, #0
 8000290:	6078      	str	r0, [r7, #4]
		//1 configure the mode of GPIO pin
	uint32_t temp = 0;
 8000292:	2300      	movs	r3, #0
 8000294:	60fb      	str	r3, [r7, #12]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	795b      	ldrb	r3, [r3, #5]
 800029a:	2b03      	cmp	r3, #3
 800029c:	d821      	bhi.n	80002e2 <GPIO_Init+0x58>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	795b      	ldrb	r3, [r3, #5]
 80002a2:	461a      	mov	r2, r3
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	791b      	ldrb	r3, [r3, #4]
 80002a8:	005b      	lsls	r3, r3, #1
 80002aa:	fa02 f303 	lsl.w	r3, r2, r3
 80002ae:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	681a      	ldr	r2, [r3, #0]
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	791b      	ldrb	r3, [r3, #4]
 80002ba:	005b      	lsls	r3, r3, #1
 80002bc:	2103      	movs	r1, #3
 80002be:	fa01 f303 	lsl.w	r3, r1, r3
 80002c2:	43db      	mvns	r3, r3
 80002c4:	4619      	mov	r1, r3
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	400a      	ands	r2, r1
 80002cc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	6819      	ldr	r1, [r3, #0]
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	68fa      	ldr	r2, [r7, #12]
 80002da:	430a      	orrs	r2, r1
 80002dc:	601a      	str	r2, [r3, #0]
		temp = 0;
 80002de:	2300      	movs	r3, #0
 80002e0:	60fb      	str	r3, [r7, #12]
	else{
		//TODO Interrupt mode
	}

		//2 configure the speed of GPIO pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	799b      	ldrb	r3, [r3, #6]
 80002e6:	461a      	mov	r2, r3
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	791b      	ldrb	r3, [r3, #4]
 80002ec:	005b      	lsls	r3, r3, #1
 80002ee:	fa02 f303 	lsl.w	r3, r2, r3
 80002f2:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	689a      	ldr	r2, [r3, #8]
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	791b      	ldrb	r3, [r3, #4]
 80002fe:	005b      	lsls	r3, r3, #1
 8000300:	2103      	movs	r1, #3
 8000302:	fa01 f303 	lsl.w	r3, r1, r3
 8000306:	43db      	mvns	r3, r3
 8000308:	4619      	mov	r1, r3
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	400a      	ands	r2, r1
 8000310:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	6899      	ldr	r1, [r3, #8]
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	68fa      	ldr	r2, [r7, #12]
 800031e:	430a      	orrs	r2, r1
 8000320:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000322:	2300      	movs	r3, #0
 8000324:	60fb      	str	r3, [r7, #12]

		//3 configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	79db      	ldrb	r3, [r3, #7]
 800032a:	461a      	mov	r2, r3
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	791b      	ldrb	r3, [r3, #4]
 8000330:	005b      	lsls	r3, r3, #1
 8000332:	fa02 f303 	lsl.w	r3, r2, r3
 8000336:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3<<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	68da      	ldr	r2, [r3, #12]
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	791b      	ldrb	r3, [r3, #4]
 8000342:	005b      	lsls	r3, r3, #1
 8000344:	2103      	movs	r1, #3
 8000346:	fa01 f303 	lsl.w	r3, r1, r3
 800034a:	43db      	mvns	r3, r3
 800034c:	4619      	mov	r1, r3
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	400a      	ands	r2, r1
 8000354:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	68d9      	ldr	r1, [r3, #12]
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	68fa      	ldr	r2, [r7, #12]
 8000362:	430a      	orrs	r2, r1
 8000364:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000366:	2300      	movs	r3, #0
 8000368:	60fb      	str	r3, [r7, #12]
		//4 configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	7a1b      	ldrb	r3, [r3, #8]
 800036e:	461a      	mov	r2, r3
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	791b      	ldrb	r3, [r3, #4]
 8000374:	fa02 f303 	lsl.w	r3, r2, r3
 8000378:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	689a      	ldr	r2, [r3, #8]
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	791b      	ldrb	r3, [r3, #4]
 8000384:	4619      	mov	r1, r3
 8000386:	2303      	movs	r3, #3
 8000388:	408b      	lsls	r3, r1
 800038a:	43db      	mvns	r3, r3
 800038c:	4619      	mov	r1, r3
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	400a      	ands	r2, r1
 8000394:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	6859      	ldr	r1, [r3, #4]
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	68fa      	ldr	r2, [r7, #12]
 80003a2:	430a      	orrs	r2, r1
 80003a4:	605a      	str	r2, [r3, #4]
		//5 configure the alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	795b      	ldrb	r3, [r3, #5]
 80003aa:	2b02      	cmp	r3, #2
 80003ac:	d131      	bne.n	8000412 <GPIO_Init+0x188>
		uint8_t temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8;
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	791b      	ldrb	r3, [r3, #4]
 80003b2:	08db      	lsrs	r3, r3, #3
 80003b4:	72fb      	strb	r3, [r7, #11]
		uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%8;
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	791b      	ldrb	r3, [r3, #4]
 80003ba:	f003 0307 	and.w	r3, r3, #7
 80003be:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~((0xF << (4 * temp2)));
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	7afa      	ldrb	r2, [r7, #11]
 80003c6:	3208      	adds	r2, #8
 80003c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80003cc:	7abb      	ldrb	r3, [r7, #10]
 80003ce:	009b      	lsls	r3, r3, #2
 80003d0:	220f      	movs	r2, #15
 80003d2:	fa02 f303 	lsl.w	r3, r2, r3
 80003d6:	43db      	mvns	r3, r3
 80003d8:	4618      	mov	r0, r3
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	7afa      	ldrb	r2, [r7, #11]
 80003e0:	4001      	ands	r1, r0
 80003e2:	3208      	adds	r2, #8
 80003e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	7afa      	ldrb	r2, [r7, #11]
 80003ee:	3208      	adds	r2, #8
 80003f0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	7a5b      	ldrb	r3, [r3, #9]
 80003f8:	461a      	mov	r2, r3
 80003fa:	7abb      	ldrb	r3, [r7, #10]
 80003fc:	009b      	lsls	r3, r3, #2
 80003fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000402:	4618      	mov	r0, r3
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	7afa      	ldrb	r2, [r7, #11]
 800040a:	4301      	orrs	r1, r0
 800040c:	3208      	adds	r2, #8
 800040e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000412:	bf00      	nop
 8000414:	3714      	adds	r7, #20
 8000416:	46bd      	mov	sp, r7
 8000418:	bc80      	pop	{r7}
 800041a:	4770      	bx	lr

0800041c <GPIO_PeriClockControl>:
	* @param  *pGPIOx : GPIO peripheral base address
	* @param  EnorDi  : ENABLE(1) or DISABLE(0) macros
	* @param
	* @return None
	*/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 800041c:	b480      	push	{r7}
 800041e:	b083      	sub	sp, #12
 8000420:	af00      	add	r7, sp, #0
 8000422:	6078      	str	r0, [r7, #4]
 8000424:	460b      	mov	r3, r1
 8000426:	70fb      	strb	r3, [r7, #3]
	if(EnorDi== ENABLE){
 8000428:	78fb      	ldrb	r3, [r7, #3]
 800042a:	2b01      	cmp	r3, #1
 800042c:	d162      	bne.n	80004f4 <GPIO_PeriClockControl+0xd8>
		if(pGPIOx == GPIOA){
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	4a64      	ldr	r2, [pc, #400]	@ (80005c4 <GPIO_PeriClockControl+0x1a8>)
 8000432:	4293      	cmp	r3, r2
 8000434:	d106      	bne.n	8000444 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000436:	4b64      	ldr	r3, [pc, #400]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000438:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800043a:	4a63      	ldr	r2, [pc, #396]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 800043c:	f043 0301 	orr.w	r3, r3, #1
 8000440:	6313      	str	r3, [r2, #48]	@ 0x30
		else if (pGPIOx == GPIOI){
			GPIOI_PCLK_DI();
		}
	}

}
 8000442:	e0b9      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB){
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	4a61      	ldr	r2, [pc, #388]	@ (80005cc <GPIO_PeriClockControl+0x1b0>)
 8000448:	4293      	cmp	r3, r2
 800044a:	d106      	bne.n	800045a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800044c:	4b5e      	ldr	r3, [pc, #376]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 800044e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000450:	4a5d      	ldr	r2, [pc, #372]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000452:	f043 0302 	orr.w	r3, r3, #2
 8000456:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000458:	e0ae      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC){
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	4a5c      	ldr	r2, [pc, #368]	@ (80005d0 <GPIO_PeriClockControl+0x1b4>)
 800045e:	4293      	cmp	r3, r2
 8000460:	d106      	bne.n	8000470 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000462:	4b59      	ldr	r3, [pc, #356]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000464:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000466:	4a58      	ldr	r2, [pc, #352]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000468:	f043 0304 	orr.w	r3, r3, #4
 800046c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800046e:	e0a3      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD){
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	4a58      	ldr	r2, [pc, #352]	@ (80005d4 <GPIO_PeriClockControl+0x1b8>)
 8000474:	4293      	cmp	r3, r2
 8000476:	d106      	bne.n	8000486 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000478:	4b53      	ldr	r3, [pc, #332]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 800047a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800047c:	4a52      	ldr	r2, [pc, #328]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 800047e:	f043 0308 	orr.w	r3, r3, #8
 8000482:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000484:	e098      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE){
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	4a53      	ldr	r2, [pc, #332]	@ (80005d8 <GPIO_PeriClockControl+0x1bc>)
 800048a:	4293      	cmp	r3, r2
 800048c:	d106      	bne.n	800049c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800048e:	4b4e      	ldr	r3, [pc, #312]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000490:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000492:	4a4d      	ldr	r2, [pc, #308]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000494:	f043 0310 	orr.w	r3, r3, #16
 8000498:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800049a:	e08d      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF){
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	4a4f      	ldr	r2, [pc, #316]	@ (80005dc <GPIO_PeriClockControl+0x1c0>)
 80004a0:	4293      	cmp	r3, r2
 80004a2:	d106      	bne.n	80004b2 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80004a4:	4b48      	ldr	r3, [pc, #288]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80004a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004a8:	4a47      	ldr	r2, [pc, #284]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80004aa:	f043 0320 	orr.w	r3, r3, #32
 80004ae:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004b0:	e082      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG){
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	4a4a      	ldr	r2, [pc, #296]	@ (80005e0 <GPIO_PeriClockControl+0x1c4>)
 80004b6:	4293      	cmp	r3, r2
 80004b8:	d106      	bne.n	80004c8 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80004ba:	4b43      	ldr	r3, [pc, #268]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80004bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004be:	4a42      	ldr	r2, [pc, #264]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80004c0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80004c4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004c6:	e077      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH){
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	4a46      	ldr	r2, [pc, #280]	@ (80005e4 <GPIO_PeriClockControl+0x1c8>)
 80004cc:	4293      	cmp	r3, r2
 80004ce:	d106      	bne.n	80004de <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80004d0:	4b3d      	ldr	r3, [pc, #244]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80004d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004d4:	4a3c      	ldr	r2, [pc, #240]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80004d6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80004da:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004dc:	e06c      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI){
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	4a41      	ldr	r2, [pc, #260]	@ (80005e8 <GPIO_PeriClockControl+0x1cc>)
 80004e2:	4293      	cmp	r3, r2
 80004e4:	d168      	bne.n	80005b8 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80004e6:	4b38      	ldr	r3, [pc, #224]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80004e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004ea:	4a37      	ldr	r2, [pc, #220]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80004ec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80004f0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004f2:	e061      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA){
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	4a33      	ldr	r2, [pc, #204]	@ (80005c4 <GPIO_PeriClockControl+0x1a8>)
 80004f8:	4293      	cmp	r3, r2
 80004fa:	d106      	bne.n	800050a <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80004fc:	4b32      	ldr	r3, [pc, #200]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80004fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000500:	4a31      	ldr	r2, [pc, #196]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000502:	f023 0301 	bic.w	r3, r3, #1
 8000506:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000508:	e056      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB){
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	4a2f      	ldr	r2, [pc, #188]	@ (80005cc <GPIO_PeriClockControl+0x1b0>)
 800050e:	4293      	cmp	r3, r2
 8000510:	d106      	bne.n	8000520 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 8000512:	4b2d      	ldr	r3, [pc, #180]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000514:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000516:	4a2c      	ldr	r2, [pc, #176]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000518:	f023 0302 	bic.w	r3, r3, #2
 800051c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800051e:	e04b      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC){
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	4a2b      	ldr	r2, [pc, #172]	@ (80005d0 <GPIO_PeriClockControl+0x1b4>)
 8000524:	4293      	cmp	r3, r2
 8000526:	d106      	bne.n	8000536 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000528:	4b27      	ldr	r3, [pc, #156]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 800052a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800052c:	4a26      	ldr	r2, [pc, #152]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 800052e:	f023 0304 	bic.w	r3, r3, #4
 8000532:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000534:	e040      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD){
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	4a26      	ldr	r2, [pc, #152]	@ (80005d4 <GPIO_PeriClockControl+0x1b8>)
 800053a:	4293      	cmp	r3, r2
 800053c:	d106      	bne.n	800054c <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 800053e:	4b22      	ldr	r3, [pc, #136]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000540:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000542:	4a21      	ldr	r2, [pc, #132]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000544:	f023 0308 	bic.w	r3, r3, #8
 8000548:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800054a:	e035      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE){
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	4a22      	ldr	r2, [pc, #136]	@ (80005d8 <GPIO_PeriClockControl+0x1bc>)
 8000550:	4293      	cmp	r3, r2
 8000552:	d106      	bne.n	8000562 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000554:	4b1c      	ldr	r3, [pc, #112]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000556:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000558:	4a1b      	ldr	r2, [pc, #108]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 800055a:	f023 0310 	bic.w	r3, r3, #16
 800055e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000560:	e02a      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF){
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	4a1d      	ldr	r2, [pc, #116]	@ (80005dc <GPIO_PeriClockControl+0x1c0>)
 8000566:	4293      	cmp	r3, r2
 8000568:	d106      	bne.n	8000578 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 800056a:	4b17      	ldr	r3, [pc, #92]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 800056c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800056e:	4a16      	ldr	r2, [pc, #88]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000570:	f023 0320 	bic.w	r3, r3, #32
 8000574:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000576:	e01f      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG){
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	4a19      	ldr	r2, [pc, #100]	@ (80005e0 <GPIO_PeriClockControl+0x1c4>)
 800057c:	4293      	cmp	r3, r2
 800057e:	d106      	bne.n	800058e <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8000580:	4b11      	ldr	r3, [pc, #68]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000582:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000584:	4a10      	ldr	r2, [pc, #64]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000586:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800058a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800058c:	e014      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH){
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	4a14      	ldr	r2, [pc, #80]	@ (80005e4 <GPIO_PeriClockControl+0x1c8>)
 8000592:	4293      	cmp	r3, r2
 8000594:	d106      	bne.n	80005a4 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000596:	4b0c      	ldr	r3, [pc, #48]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 8000598:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800059a:	4a0b      	ldr	r2, [pc, #44]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 800059c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80005a0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005a2:	e009      	b.n	80005b8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI){
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	4a10      	ldr	r2, [pc, #64]	@ (80005e8 <GPIO_PeriClockControl+0x1cc>)
 80005a8:	4293      	cmp	r3, r2
 80005aa:	d105      	bne.n	80005b8 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 80005ac:	4b06      	ldr	r3, [pc, #24]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80005ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005b0:	4a05      	ldr	r2, [pc, #20]	@ (80005c8 <GPIO_PeriClockControl+0x1ac>)
 80005b2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80005b6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005b8:	bf00      	nop
 80005ba:	370c      	adds	r7, #12
 80005bc:	46bd      	mov	sp, r7
 80005be:	bc80      	pop	{r7}
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop
 80005c4:	40020000 	.word	0x40020000
 80005c8:	40023800 	.word	0x40023800
 80005cc:	40020400 	.word	0x40020400
 80005d0:	40020800 	.word	0x40020800
 80005d4:	40020c00 	.word	0x40020c00
 80005d8:	40021000 	.word	0x40021000
 80005dc:	40021400 	.word	0x40021400
 80005e0:	40021800 	.word	0x40021800
 80005e4:	40021c00 	.word	0x40021c00
 80005e8:	40022000 	.word	0x40022000

080005ec <GPIO_ToggleOutputPin>:
 * @brief  Toggle the state of a specific GPIO output pin.
 * @param  pGPIOx : pointer to GPIO peripheral base address
 * @param  PinNum : pin number to toggle (0–15)
 * @return None
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNum){
 80005ec:	b480      	push	{r7}
 80005ee:	b083      	sub	sp, #12
 80005f0:	af00      	add	r7, sp, #0
 80005f2:	6078      	str	r0, [r7, #4]
 80005f4:	460b      	mov	r3, r1
 80005f6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNum);
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	695b      	ldr	r3, [r3, #20]
 80005fc:	78fa      	ldrb	r2, [r7, #3]
 80005fe:	2101      	movs	r1, #1
 8000600:	fa01 f202 	lsl.w	r2, r1, r2
 8000604:	405a      	eors	r2, r3
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	615a      	str	r2, [r3, #20]
}
 800060a:	bf00      	nop
 800060c:	370c      	adds	r7, #12
 800060e:	46bd      	mov	sp, r7
 8000610:	bc80      	pop	{r7}
 8000612:	4770      	bx	lr

08000614 <__libc_init_array>:
 8000614:	b570      	push	{r4, r5, r6, lr}
 8000616:	4d0d      	ldr	r5, [pc, #52]	@ (800064c <__libc_init_array+0x38>)
 8000618:	4c0d      	ldr	r4, [pc, #52]	@ (8000650 <__libc_init_array+0x3c>)
 800061a:	1b64      	subs	r4, r4, r5
 800061c:	10a4      	asrs	r4, r4, #2
 800061e:	2600      	movs	r6, #0
 8000620:	42a6      	cmp	r6, r4
 8000622:	d109      	bne.n	8000638 <__libc_init_array+0x24>
 8000624:	4d0b      	ldr	r5, [pc, #44]	@ (8000654 <__libc_init_array+0x40>)
 8000626:	4c0c      	ldr	r4, [pc, #48]	@ (8000658 <__libc_init_array+0x44>)
 8000628:	f000 f818 	bl	800065c <_init>
 800062c:	1b64      	subs	r4, r4, r5
 800062e:	10a4      	asrs	r4, r4, #2
 8000630:	2600      	movs	r6, #0
 8000632:	42a6      	cmp	r6, r4
 8000634:	d105      	bne.n	8000642 <__libc_init_array+0x2e>
 8000636:	bd70      	pop	{r4, r5, r6, pc}
 8000638:	f855 3b04 	ldr.w	r3, [r5], #4
 800063c:	4798      	blx	r3
 800063e:	3601      	adds	r6, #1
 8000640:	e7ee      	b.n	8000620 <__libc_init_array+0xc>
 8000642:	f855 3b04 	ldr.w	r3, [r5], #4
 8000646:	4798      	blx	r3
 8000648:	3601      	adds	r6, #1
 800064a:	e7f2      	b.n	8000632 <__libc_init_array+0x1e>
 800064c:	08000674 	.word	0x08000674
 8000650:	08000674 	.word	0x08000674
 8000654:	08000674 	.word	0x08000674
 8000658:	08000678 	.word	0x08000678

0800065c <_init>:
 800065c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800065e:	bf00      	nop
 8000660:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000662:	bc08      	pop	{r3}
 8000664:	469e      	mov	lr, r3
 8000666:	4770      	bx	lr

08000668 <_fini>:
 8000668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800066a:	bf00      	nop
 800066c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800066e:	bc08      	pop	{r3}
 8000670:	469e      	mov	lr, r3
 8000672:	4770      	bx	lr
