
stm32f4xx_drivers3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000084c  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009d4  080009dc  000019dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009d4  080009d4  000019dc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080009d4  080009d4  000019dc  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080009d4  080009dc  000019dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009d4  080009d4  000019d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080009d8  080009d8  000019d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000019dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000019dc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000019dc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a18  00000000  00000000  00001a06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002a9  00000000  00000000  0000241e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000026c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008b  00000000  00000000  00002790  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000014a6  00000000  00000000  0000281b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f4f  00000000  00000000  00003cc1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005851  00000000  00000000  00004c10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000a461  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000026c  00000000  00000000  0000a4a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000057  00000000  00000000  0000a710  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080009bc 	.word	0x080009bc

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080009bc 	.word	0x080009bc

080001c8 <main>:
#include "stm32f407xx_gpio.h"
void delay(void){
	for(uint32_t i = 0; i<500000; i++);
}

int main(void){
 80001c8:	b580      	push	{r7, lr}
 80001ca:	b086      	sub	sp, #24
 80001cc:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GPIOBtn;
	GpioLed.pGPIOx = GPIOD;
 80001ce:	4b18      	ldr	r3, [pc, #96]	@ (8000230 <main+0x68>)
 80001d0:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_No_12;
 80001d2:	230c      	movs	r3, #12
 80001d4:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001d6:	2301      	movs	r3, #1
 80001d8:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80001da:	2300      	movs	r3, #0
 80001dc:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001de:	2300      	movs	r3, #0
 80001e0:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80001e2:	2300      	movs	r3, #0
 80001e4:	74fb      	strb	r3, [r7, #19]

	GPIOBtn.pGPIOx = GPIOD;
 80001e6:	4b12      	ldr	r3, [pc, #72]	@ (8000230 <main+0x68>)
 80001e8:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_No_5;
 80001ea:	2305      	movs	r3, #5
 80001ec:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 80001ee:	2304      	movs	r3, #4
 80001f0:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80001f2:	2302      	movs	r3, #2
 80001f4:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;
 80001f6:	2301      	movs	r3, #1
 80001f8:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 80001fa:	2101      	movs	r1, #1
 80001fc:	480c      	ldr	r0, [pc, #48]	@ (8000230 <main+0x68>)
 80001fe:	f000 f9eb 	bl	80005d8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000202:	f107 030c 	add.w	r3, r7, #12
 8000206:	4618      	mov	r0, r3
 8000208:	f000 f84c 	bl	80002a4 <GPIO_Init>
	GPIO_Init(&GPIOBtn);
 800020c:	463b      	mov	r3, r7
 800020e:	4618      	mov	r0, r3
 8000210:	f000 f848 	bl	80002a4 <GPIO_Init>
	//IRQ config
	GPIO_IRQITConfig(IRQ_NO_EXTI9_5, ENABLE);
 8000214:	2101      	movs	r1, #1
 8000216:	2017      	movs	r0, #23
 8000218:	f000 fada 	bl	80007d0 <GPIO_IRQITConfig>
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5, NVIC_IRQ_PRIO15);
 800021c:	210f      	movs	r1, #15
 800021e:	2017      	movs	r0, #23
 8000220:	f000 fb5a 	bl	80008d8 <GPIO_IRQPriorityConfig>

	return 0;
 8000224:	2300      	movs	r3, #0
}
 8000226:	4618      	mov	r0, r3
 8000228:	3718      	adds	r7, #24
 800022a:	46bd      	mov	sp, r7
 800022c:	bd80      	pop	{r7, pc}
 800022e:	bf00      	nop
 8000230:	40020c00 	.word	0x40020c00

08000234 <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler(void){
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_No_5);
 8000238:	2005      	movs	r0, #5
 800023a:	f000 fb7b 	bl	8000934 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_No_12);
 800023e:	210c      	movs	r1, #12
 8000240:	4802      	ldr	r0, [pc, #8]	@ (800024c <EXTI9_5_IRQHandler+0x18>)
 8000242:	f000 fab1 	bl	80007a8 <GPIO_ToggleOutputPin>
}
 8000246:	bf00      	nop
 8000248:	bd80      	pop	{r7, pc}
 800024a:	bf00      	nop
 800024c:	40020c00 	.word	0x40020c00

08000250 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000250:	480d      	ldr	r0, [pc, #52]	@ (8000288 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000252:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000254:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000258:	480c      	ldr	r0, [pc, #48]	@ (800028c <LoopForever+0x6>)
  ldr r1, =_edata
 800025a:	490d      	ldr	r1, [pc, #52]	@ (8000290 <LoopForever+0xa>)
  ldr r2, =_sidata
 800025c:	4a0d      	ldr	r2, [pc, #52]	@ (8000294 <LoopForever+0xe>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000260:	e002      	b.n	8000268 <LoopCopyDataInit>

08000262 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000262:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000264:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000266:	3304      	adds	r3, #4

08000268 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000268:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800026c:	d3f9      	bcc.n	8000262 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026e:	4a0a      	ldr	r2, [pc, #40]	@ (8000298 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000270:	4c0a      	ldr	r4, [pc, #40]	@ (800029c <LoopForever+0x16>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000274:	e001      	b.n	800027a <LoopFillZerobss>

08000276 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000276:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000278:	3204      	adds	r2, #4

0800027a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800027c:	d3fb      	bcc.n	8000276 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800027e:	f000 fb79 	bl	8000974 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000282:	f7ff ffa1 	bl	80001c8 <main>

08000286 <LoopForever>:

LoopForever:
  b LoopForever
 8000286:	e7fe      	b.n	8000286 <LoopForever>
  ldr   r0, =_estack
 8000288:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800028c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000290:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000294:	080009dc 	.word	0x080009dc
  ldr r2, =_sbss
 8000298:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800029c:	2000001c 	.word	0x2000001c

080002a0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a0:	e7fe      	b.n	80002a0 <ADC_IRQHandler>
	...

080002a4 <GPIO_Init>:
	* @param  *pGPIOHandle : pointer to the GPIO handle struct
	* @param
	* @param
	* @return None
	*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80002a4:	b480      	push	{r7}
 80002a6:	b087      	sub	sp, #28
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
		//1 configure the mode of GPIO pin
	uint32_t temp = 0;
 80002ac:	2300      	movs	r3, #0
 80002ae:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	795b      	ldrb	r3, [r3, #5]
 80002b4:	2b03      	cmp	r3, #3
 80002b6:	d822      	bhi.n	80002fe <GPIO_Init+0x5a>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	795b      	ldrb	r3, [r3, #5]
 80002bc:	461a      	mov	r2, r3
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	791b      	ldrb	r3, [r3, #4]
 80002c2:	005b      	lsls	r3, r3, #1
 80002c4:	fa02 f303 	lsl.w	r3, r2, r3
 80002c8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	681a      	ldr	r2, [r3, #0]
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	791b      	ldrb	r3, [r3, #4]
 80002d4:	005b      	lsls	r3, r3, #1
 80002d6:	2103      	movs	r1, #3
 80002d8:	fa01 f303 	lsl.w	r3, r1, r3
 80002dc:	43db      	mvns	r3, r3
 80002de:	4619      	mov	r1, r3
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	400a      	ands	r2, r1
 80002e6:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	6819      	ldr	r1, [r3, #0]
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	697a      	ldr	r2, [r7, #20]
 80002f4:	430a      	orrs	r2, r1
 80002f6:	601a      	str	r2, [r3, #0]
		temp = 0;
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	e0c8      	b.n	8000490 <GPIO_Init+0x1ec>
	}
	else{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	795b      	ldrb	r3, [r3, #5]
 8000302:	2b04      	cmp	r3, #4
 8000304:	d117      	bne.n	8000336 <GPIO_Init+0x92>
			//1. configure falling edge reg
			EXTI->FTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000306:	4b47      	ldr	r3, [pc, #284]	@ (8000424 <GPIO_Init+0x180>)
 8000308:	68db      	ldr	r3, [r3, #12]
 800030a:	687a      	ldr	r2, [r7, #4]
 800030c:	7912      	ldrb	r2, [r2, #4]
 800030e:	4611      	mov	r1, r2
 8000310:	2201      	movs	r2, #1
 8000312:	408a      	lsls	r2, r1
 8000314:	4611      	mov	r1, r2
 8000316:	4a43      	ldr	r2, [pc, #268]	@ (8000424 <GPIO_Init+0x180>)
 8000318:	430b      	orrs	r3, r1
 800031a:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800031c:	4b41      	ldr	r3, [pc, #260]	@ (8000424 <GPIO_Init+0x180>)
 800031e:	689b      	ldr	r3, [r3, #8]
 8000320:	687a      	ldr	r2, [r7, #4]
 8000322:	7912      	ldrb	r2, [r2, #4]
 8000324:	4611      	mov	r1, r2
 8000326:	2201      	movs	r2, #1
 8000328:	408a      	lsls	r2, r1
 800032a:	43d2      	mvns	r2, r2
 800032c:	4611      	mov	r1, r2
 800032e:	4a3d      	ldr	r2, [pc, #244]	@ (8000424 <GPIO_Init+0x180>)
 8000330:	400b      	ands	r3, r1
 8000332:	6093      	str	r3, [r2, #8]
 8000334:	e035      	b.n	80003a2 <GPIO_Init+0xfe>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	795b      	ldrb	r3, [r3, #5]
 800033a:	2b05      	cmp	r3, #5
 800033c:	d117      	bne.n	800036e <GPIO_Init+0xca>
			EXTI->FTSR &= ~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800033e:	4b39      	ldr	r3, [pc, #228]	@ (8000424 <GPIO_Init+0x180>)
 8000340:	68db      	ldr	r3, [r3, #12]
 8000342:	687a      	ldr	r2, [r7, #4]
 8000344:	7912      	ldrb	r2, [r2, #4]
 8000346:	4611      	mov	r1, r2
 8000348:	2201      	movs	r2, #1
 800034a:	408a      	lsls	r2, r1
 800034c:	43d2      	mvns	r2, r2
 800034e:	4611      	mov	r1, r2
 8000350:	4a34      	ldr	r2, [pc, #208]	@ (8000424 <GPIO_Init+0x180>)
 8000352:	400b      	ands	r3, r1
 8000354:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000356:	4b33      	ldr	r3, [pc, #204]	@ (8000424 <GPIO_Init+0x180>)
 8000358:	689b      	ldr	r3, [r3, #8]
 800035a:	687a      	ldr	r2, [r7, #4]
 800035c:	7912      	ldrb	r2, [r2, #4]
 800035e:	4611      	mov	r1, r2
 8000360:	2201      	movs	r2, #1
 8000362:	408a      	lsls	r2, r1
 8000364:	4611      	mov	r1, r2
 8000366:	4a2f      	ldr	r2, [pc, #188]	@ (8000424 <GPIO_Init+0x180>)
 8000368:	430b      	orrs	r3, r1
 800036a:	6093      	str	r3, [r2, #8]
 800036c:	e019      	b.n	80003a2 <GPIO_Init+0xfe>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	795b      	ldrb	r3, [r3, #5]
 8000372:	2b06      	cmp	r3, #6
 8000374:	d115      	bne.n	80003a2 <GPIO_Init+0xfe>
			EXTI->FTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000376:	4b2b      	ldr	r3, [pc, #172]	@ (8000424 <GPIO_Init+0x180>)
 8000378:	68db      	ldr	r3, [r3, #12]
 800037a:	687a      	ldr	r2, [r7, #4]
 800037c:	7912      	ldrb	r2, [r2, #4]
 800037e:	4611      	mov	r1, r2
 8000380:	2201      	movs	r2, #1
 8000382:	408a      	lsls	r2, r1
 8000384:	4611      	mov	r1, r2
 8000386:	4a27      	ldr	r2, [pc, #156]	@ (8000424 <GPIO_Init+0x180>)
 8000388:	430b      	orrs	r3, r1
 800038a:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800038c:	4b25      	ldr	r3, [pc, #148]	@ (8000424 <GPIO_Init+0x180>)
 800038e:	689b      	ldr	r3, [r3, #8]
 8000390:	687a      	ldr	r2, [r7, #4]
 8000392:	7912      	ldrb	r2, [r2, #4]
 8000394:	4611      	mov	r1, r2
 8000396:	2201      	movs	r2, #1
 8000398:	408a      	lsls	r2, r1
 800039a:	4611      	mov	r1, r2
 800039c:	4a21      	ldr	r2, [pc, #132]	@ (8000424 <GPIO_Init+0x180>)
 800039e:	430b      	orrs	r3, r1
 80003a0:	6093      	str	r3, [r2, #8]

		}
		//Configure GPIO port slection in SYSCFG
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	791b      	ldrb	r3, [r3, #4]
 80003a6:	089b      	lsrs	r3, r3, #2
 80003a8:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	791b      	ldrb	r3, [r3, #4]
 80003ae:	f003 0303 	and.w	r3, r3, #3
 80003b2:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	4a1b      	ldr	r2, [pc, #108]	@ (8000428 <GPIO_Init+0x184>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d044      	beq.n	8000448 <GPIO_Init+0x1a4>
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	4a1a      	ldr	r2, [pc, #104]	@ (800042c <GPIO_Init+0x188>)
 80003c4:	4293      	cmp	r3, r2
 80003c6:	d02b      	beq.n	8000420 <GPIO_Init+0x17c>
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	4a18      	ldr	r2, [pc, #96]	@ (8000430 <GPIO_Init+0x18c>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d024      	beq.n	800041c <GPIO_Init+0x178>
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	4a17      	ldr	r2, [pc, #92]	@ (8000434 <GPIO_Init+0x190>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d01d      	beq.n	8000418 <GPIO_Init+0x174>
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	4a15      	ldr	r2, [pc, #84]	@ (8000438 <GPIO_Init+0x194>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d016      	beq.n	8000414 <GPIO_Init+0x170>
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	4a14      	ldr	r2, [pc, #80]	@ (800043c <GPIO_Init+0x198>)
 80003ec:	4293      	cmp	r3, r2
 80003ee:	d00f      	beq.n	8000410 <GPIO_Init+0x16c>
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	4a12      	ldr	r2, [pc, #72]	@ (8000440 <GPIO_Init+0x19c>)
 80003f6:	4293      	cmp	r3, r2
 80003f8:	d008      	beq.n	800040c <GPIO_Init+0x168>
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	4a11      	ldr	r2, [pc, #68]	@ (8000444 <GPIO_Init+0x1a0>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d101      	bne.n	8000408 <GPIO_Init+0x164>
 8000404:	2307      	movs	r3, #7
 8000406:	e020      	b.n	800044a <GPIO_Init+0x1a6>
 8000408:	2300      	movs	r3, #0
 800040a:	e01e      	b.n	800044a <GPIO_Init+0x1a6>
 800040c:	2306      	movs	r3, #6
 800040e:	e01c      	b.n	800044a <GPIO_Init+0x1a6>
 8000410:	2305      	movs	r3, #5
 8000412:	e01a      	b.n	800044a <GPIO_Init+0x1a6>
 8000414:	2304      	movs	r3, #4
 8000416:	e018      	b.n	800044a <GPIO_Init+0x1a6>
 8000418:	2303      	movs	r3, #3
 800041a:	e016      	b.n	800044a <GPIO_Init+0x1a6>
 800041c:	2302      	movs	r3, #2
 800041e:	e014      	b.n	800044a <GPIO_Init+0x1a6>
 8000420:	2301      	movs	r3, #1
 8000422:	e012      	b.n	800044a <GPIO_Init+0x1a6>
 8000424:	40013c00 	.word	0x40013c00
 8000428:	40020000 	.word	0x40020000
 800042c:	40020400 	.word	0x40020400
 8000430:	40020800 	.word	0x40020800
 8000434:	40020c00 	.word	0x40020c00
 8000438:	40021000 	.word	0x40021000
 800043c:	40021400 	.word	0x40021400
 8000440:	40021800 	.word	0x40021800
 8000444:	40021c00 	.word	0x40021c00
 8000448:	2300      	movs	r3, #0
 800044a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800044c:	4b5f      	ldr	r3, [pc, #380]	@ (80005cc <GPIO_Init+0x328>)
 800044e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000450:	4a5e      	ldr	r2, [pc, #376]	@ (80005cc <GPIO_Init+0x328>)
 8000452:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000456:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] |= portcode<<(temp2*4);
 8000458:	4a5d      	ldr	r2, [pc, #372]	@ (80005d0 <GPIO_Init+0x32c>)
 800045a:	7cfb      	ldrb	r3, [r7, #19]
 800045c:	3302      	adds	r3, #2
 800045e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000462:	7c79      	ldrb	r1, [r7, #17]
 8000464:	7cbb      	ldrb	r3, [r7, #18]
 8000466:	009b      	lsls	r3, r3, #2
 8000468:	fa01 f303 	lsl.w	r3, r1, r3
 800046c:	4618      	mov	r0, r3
 800046e:	4958      	ldr	r1, [pc, #352]	@ (80005d0 <GPIO_Init+0x32c>)
 8000470:	7cfb      	ldrb	r3, [r7, #19]
 8000472:	4302      	orrs	r2, r0
 8000474:	3302      	adds	r3, #2
 8000476:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		//enable interrupt delievery in IMR
		EXTI->IMR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800047a:	4b56      	ldr	r3, [pc, #344]	@ (80005d4 <GPIO_Init+0x330>)
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	687a      	ldr	r2, [r7, #4]
 8000480:	7912      	ldrb	r2, [r2, #4]
 8000482:	4611      	mov	r1, r2
 8000484:	2201      	movs	r2, #1
 8000486:	408a      	lsls	r2, r1
 8000488:	4611      	mov	r1, r2
 800048a:	4a52      	ldr	r2, [pc, #328]	@ (80005d4 <GPIO_Init+0x330>)
 800048c:	430b      	orrs	r3, r1
 800048e:	6013      	str	r3, [r2, #0]
	}

		//2 configure the speed of GPIO pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	799b      	ldrb	r3, [r3, #6]
 8000494:	461a      	mov	r2, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	791b      	ldrb	r3, [r3, #4]
 800049a:	005b      	lsls	r3, r3, #1
 800049c:	fa02 f303 	lsl.w	r3, r2, r3
 80004a0:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	689a      	ldr	r2, [r3, #8]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	791b      	ldrb	r3, [r3, #4]
 80004ac:	005b      	lsls	r3, r3, #1
 80004ae:	2103      	movs	r1, #3
 80004b0:	fa01 f303 	lsl.w	r3, r1, r3
 80004b4:	43db      	mvns	r3, r3
 80004b6:	4619      	mov	r1, r3
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	400a      	ands	r2, r1
 80004be:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	6899      	ldr	r1, [r3, #8]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	697a      	ldr	r2, [r7, #20]
 80004cc:	430a      	orrs	r2, r1
 80004ce:	609a      	str	r2, [r3, #8]
	temp = 0;
 80004d0:	2300      	movs	r3, #0
 80004d2:	617b      	str	r3, [r7, #20]

		//3 configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	79db      	ldrb	r3, [r3, #7]
 80004d8:	461a      	mov	r2, r3
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	791b      	ldrb	r3, [r3, #4]
 80004de:	005b      	lsls	r3, r3, #1
 80004e0:	fa02 f303 	lsl.w	r3, r2, r3
 80004e4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3<<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	68da      	ldr	r2, [r3, #12]
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	791b      	ldrb	r3, [r3, #4]
 80004f0:	005b      	lsls	r3, r3, #1
 80004f2:	2103      	movs	r1, #3
 80004f4:	fa01 f303 	lsl.w	r3, r1, r3
 80004f8:	43db      	mvns	r3, r3
 80004fa:	4619      	mov	r1, r3
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	400a      	ands	r2, r1
 8000502:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	68d9      	ldr	r1, [r3, #12]
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	697a      	ldr	r2, [r7, #20]
 8000510:	430a      	orrs	r2, r1
 8000512:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000514:	2300      	movs	r3, #0
 8000516:	617b      	str	r3, [r7, #20]
		//4 configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	7a1b      	ldrb	r3, [r3, #8]
 800051c:	461a      	mov	r2, r3
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	791b      	ldrb	r3, [r3, #4]
 8000522:	fa02 f303 	lsl.w	r3, r2, r3
 8000526:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	689a      	ldr	r2, [r3, #8]
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	791b      	ldrb	r3, [r3, #4]
 8000532:	4619      	mov	r1, r3
 8000534:	2303      	movs	r3, #3
 8000536:	408b      	lsls	r3, r1
 8000538:	43db      	mvns	r3, r3
 800053a:	4619      	mov	r1, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	400a      	ands	r2, r1
 8000542:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	6859      	ldr	r1, [r3, #4]
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	697a      	ldr	r2, [r7, #20]
 8000550:	430a      	orrs	r2, r1
 8000552:	605a      	str	r2, [r3, #4]
		//5 configure the alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	795b      	ldrb	r3, [r3, #5]
 8000558:	2b02      	cmp	r3, #2
 800055a:	d131      	bne.n	80005c0 <GPIO_Init+0x31c>
		uint8_t temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8;
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	791b      	ldrb	r3, [r3, #4]
 8000560:	08db      	lsrs	r3, r3, #3
 8000562:	743b      	strb	r3, [r7, #16]
		uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%8;
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	791b      	ldrb	r3, [r3, #4]
 8000568:	f003 0307 	and.w	r3, r3, #7
 800056c:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~((0xF << (4 * temp2)));
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	7c3a      	ldrb	r2, [r7, #16]
 8000574:	3208      	adds	r2, #8
 8000576:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800057a:	7bfb      	ldrb	r3, [r7, #15]
 800057c:	009b      	lsls	r3, r3, #2
 800057e:	220f      	movs	r2, #15
 8000580:	fa02 f303 	lsl.w	r3, r2, r3
 8000584:	43db      	mvns	r3, r3
 8000586:	4618      	mov	r0, r3
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	7c3a      	ldrb	r2, [r7, #16]
 800058e:	4001      	ands	r1, r0
 8000590:	3208      	adds	r2, #8
 8000592:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	7c3a      	ldrb	r2, [r7, #16]
 800059c:	3208      	adds	r2, #8
 800059e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	7a5b      	ldrb	r3, [r3, #9]
 80005a6:	461a      	mov	r2, r3
 80005a8:	7bfb      	ldrb	r3, [r7, #15]
 80005aa:	009b      	lsls	r3, r3, #2
 80005ac:	fa02 f303 	lsl.w	r3, r2, r3
 80005b0:	4618      	mov	r0, r3
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	7c3a      	ldrb	r2, [r7, #16]
 80005b8:	4301      	orrs	r1, r0
 80005ba:	3208      	adds	r2, #8
 80005bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80005c0:	bf00      	nop
 80005c2:	371c      	adds	r7, #28
 80005c4:	46bd      	mov	sp, r7
 80005c6:	bc80      	pop	{r7}
 80005c8:	4770      	bx	lr
 80005ca:	bf00      	nop
 80005cc:	40023800 	.word	0x40023800
 80005d0:	40013800 	.word	0x40013800
 80005d4:	40013c00 	.word	0x40013c00

080005d8 <GPIO_PeriClockControl>:
	* @param  *pGPIOx : GPIO peripheral base address
	* @param  EnorDi  : ENABLE(1) or DISABLE(0) macros
	* @param
	* @return None
	*/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 80005d8:	b480      	push	{r7}
 80005da:	b083      	sub	sp, #12
 80005dc:	af00      	add	r7, sp, #0
 80005de:	6078      	str	r0, [r7, #4]
 80005e0:	460b      	mov	r3, r1
 80005e2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi== ENABLE){
 80005e4:	78fb      	ldrb	r3, [r7, #3]
 80005e6:	2b01      	cmp	r3, #1
 80005e8:	d162      	bne.n	80006b0 <GPIO_PeriClockControl+0xd8>
		if(pGPIOx == GPIOA){
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	4a64      	ldr	r2, [pc, #400]	@ (8000780 <GPIO_PeriClockControl+0x1a8>)
 80005ee:	4293      	cmp	r3, r2
 80005f0:	d106      	bne.n	8000600 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80005f2:	4b64      	ldr	r3, [pc, #400]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80005f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005f6:	4a63      	ldr	r2, [pc, #396]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80005f8:	f043 0301 	orr.w	r3, r3, #1
 80005fc:	6313      	str	r3, [r2, #48]	@ 0x30
		else if (pGPIOx == GPIOI){
			GPIOI_PCLK_DI();
		}
	}

}
 80005fe:	e0b9      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB){
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	4a61      	ldr	r2, [pc, #388]	@ (8000788 <GPIO_PeriClockControl+0x1b0>)
 8000604:	4293      	cmp	r3, r2
 8000606:	d106      	bne.n	8000616 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000608:	4b5e      	ldr	r3, [pc, #376]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800060a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800060c:	4a5d      	ldr	r2, [pc, #372]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800060e:	f043 0302 	orr.w	r3, r3, #2
 8000612:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000614:	e0ae      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC){
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	4a5c      	ldr	r2, [pc, #368]	@ (800078c <GPIO_PeriClockControl+0x1b4>)
 800061a:	4293      	cmp	r3, r2
 800061c:	d106      	bne.n	800062c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800061e:	4b59      	ldr	r3, [pc, #356]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000620:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000622:	4a58      	ldr	r2, [pc, #352]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000624:	f043 0304 	orr.w	r3, r3, #4
 8000628:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800062a:	e0a3      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD){
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	4a58      	ldr	r2, [pc, #352]	@ (8000790 <GPIO_PeriClockControl+0x1b8>)
 8000630:	4293      	cmp	r3, r2
 8000632:	d106      	bne.n	8000642 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000634:	4b53      	ldr	r3, [pc, #332]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000636:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000638:	4a52      	ldr	r2, [pc, #328]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800063a:	f043 0308 	orr.w	r3, r3, #8
 800063e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000640:	e098      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE){
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	4a53      	ldr	r2, [pc, #332]	@ (8000794 <GPIO_PeriClockControl+0x1bc>)
 8000646:	4293      	cmp	r3, r2
 8000648:	d106      	bne.n	8000658 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800064a:	4b4e      	ldr	r3, [pc, #312]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800064c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800064e:	4a4d      	ldr	r2, [pc, #308]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000650:	f043 0310 	orr.w	r3, r3, #16
 8000654:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000656:	e08d      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF){
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	4a4f      	ldr	r2, [pc, #316]	@ (8000798 <GPIO_PeriClockControl+0x1c0>)
 800065c:	4293      	cmp	r3, r2
 800065e:	d106      	bne.n	800066e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000660:	4b48      	ldr	r3, [pc, #288]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000662:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000664:	4a47      	ldr	r2, [pc, #284]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000666:	f043 0320 	orr.w	r3, r3, #32
 800066a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800066c:	e082      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG){
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	4a4a      	ldr	r2, [pc, #296]	@ (800079c <GPIO_PeriClockControl+0x1c4>)
 8000672:	4293      	cmp	r3, r2
 8000674:	d106      	bne.n	8000684 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000676:	4b43      	ldr	r3, [pc, #268]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000678:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800067a:	4a42      	ldr	r2, [pc, #264]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800067c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000680:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000682:	e077      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH){
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	4a46      	ldr	r2, [pc, #280]	@ (80007a0 <GPIO_PeriClockControl+0x1c8>)
 8000688:	4293      	cmp	r3, r2
 800068a:	d106      	bne.n	800069a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800068c:	4b3d      	ldr	r3, [pc, #244]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800068e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000690:	4a3c      	ldr	r2, [pc, #240]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000692:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000696:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000698:	e06c      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI){
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	4a41      	ldr	r2, [pc, #260]	@ (80007a4 <GPIO_PeriClockControl+0x1cc>)
 800069e:	4293      	cmp	r3, r2
 80006a0:	d168      	bne.n	8000774 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80006a2:	4b38      	ldr	r3, [pc, #224]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80006a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006a6:	4a37      	ldr	r2, [pc, #220]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80006a8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80006ac:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006ae:	e061      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA){
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	4a33      	ldr	r2, [pc, #204]	@ (8000780 <GPIO_PeriClockControl+0x1a8>)
 80006b4:	4293      	cmp	r3, r2
 80006b6:	d106      	bne.n	80006c6 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80006b8:	4b32      	ldr	r3, [pc, #200]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80006ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006bc:	4a31      	ldr	r2, [pc, #196]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80006be:	f023 0301 	bic.w	r3, r3, #1
 80006c2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006c4:	e056      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB){
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	4a2f      	ldr	r2, [pc, #188]	@ (8000788 <GPIO_PeriClockControl+0x1b0>)
 80006ca:	4293      	cmp	r3, r2
 80006cc:	d106      	bne.n	80006dc <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80006ce:	4b2d      	ldr	r3, [pc, #180]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80006d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006d2:	4a2c      	ldr	r2, [pc, #176]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80006d4:	f023 0302 	bic.w	r3, r3, #2
 80006d8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006da:	e04b      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC){
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	4a2b      	ldr	r2, [pc, #172]	@ (800078c <GPIO_PeriClockControl+0x1b4>)
 80006e0:	4293      	cmp	r3, r2
 80006e2:	d106      	bne.n	80006f2 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80006e4:	4b27      	ldr	r3, [pc, #156]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80006e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006e8:	4a26      	ldr	r2, [pc, #152]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80006ea:	f023 0304 	bic.w	r3, r3, #4
 80006ee:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006f0:	e040      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD){
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	4a26      	ldr	r2, [pc, #152]	@ (8000790 <GPIO_PeriClockControl+0x1b8>)
 80006f6:	4293      	cmp	r3, r2
 80006f8:	d106      	bne.n	8000708 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80006fa:	4b22      	ldr	r3, [pc, #136]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 80006fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006fe:	4a21      	ldr	r2, [pc, #132]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000700:	f023 0308 	bic.w	r3, r3, #8
 8000704:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000706:	e035      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE){
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	4a22      	ldr	r2, [pc, #136]	@ (8000794 <GPIO_PeriClockControl+0x1bc>)
 800070c:	4293      	cmp	r3, r2
 800070e:	d106      	bne.n	800071e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000710:	4b1c      	ldr	r3, [pc, #112]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000714:	4a1b      	ldr	r2, [pc, #108]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000716:	f023 0310 	bic.w	r3, r3, #16
 800071a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800071c:	e02a      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF){
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	4a1d      	ldr	r2, [pc, #116]	@ (8000798 <GPIO_PeriClockControl+0x1c0>)
 8000722:	4293      	cmp	r3, r2
 8000724:	d106      	bne.n	8000734 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000726:	4b17      	ldr	r3, [pc, #92]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000728:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800072a:	4a16      	ldr	r2, [pc, #88]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800072c:	f023 0320 	bic.w	r3, r3, #32
 8000730:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000732:	e01f      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG){
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	4a19      	ldr	r2, [pc, #100]	@ (800079c <GPIO_PeriClockControl+0x1c4>)
 8000738:	4293      	cmp	r3, r2
 800073a:	d106      	bne.n	800074a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 800073c:	4b11      	ldr	r3, [pc, #68]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800073e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000740:	4a10      	ldr	r2, [pc, #64]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000742:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000746:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000748:	e014      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH){
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	4a14      	ldr	r2, [pc, #80]	@ (80007a0 <GPIO_PeriClockControl+0x1c8>)
 800074e:	4293      	cmp	r3, r2
 8000750:	d106      	bne.n	8000760 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000752:	4b0c      	ldr	r3, [pc, #48]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000754:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000756:	4a0b      	ldr	r2, [pc, #44]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 8000758:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800075c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800075e:	e009      	b.n	8000774 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI){
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	4a10      	ldr	r2, [pc, #64]	@ (80007a4 <GPIO_PeriClockControl+0x1cc>)
 8000764:	4293      	cmp	r3, r2
 8000766:	d105      	bne.n	8000774 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000768:	4b06      	ldr	r3, [pc, #24]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800076a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800076c:	4a05      	ldr	r2, [pc, #20]	@ (8000784 <GPIO_PeriClockControl+0x1ac>)
 800076e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000772:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000774:	bf00      	nop
 8000776:	370c      	adds	r7, #12
 8000778:	46bd      	mov	sp, r7
 800077a:	bc80      	pop	{r7}
 800077c:	4770      	bx	lr
 800077e:	bf00      	nop
 8000780:	40020000 	.word	0x40020000
 8000784:	40023800 	.word	0x40023800
 8000788:	40020400 	.word	0x40020400
 800078c:	40020800 	.word	0x40020800
 8000790:	40020c00 	.word	0x40020c00
 8000794:	40021000 	.word	0x40021000
 8000798:	40021400 	.word	0x40021400
 800079c:	40021800 	.word	0x40021800
 80007a0:	40021c00 	.word	0x40021c00
 80007a4:	40022000 	.word	0x40022000

080007a8 <GPIO_ToggleOutputPin>:
 * @brief  Toggle the state of a specific GPIO output pin.
 * @param  pGPIOx : pointer to GPIO peripheral base address
 * @param  PinNum : pin number to toggle (0–15)
 * @return None
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNum){
 80007a8:	b480      	push	{r7}
 80007aa:	b083      	sub	sp, #12
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	6078      	str	r0, [r7, #4]
 80007b0:	460b      	mov	r3, r1
 80007b2:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNum);
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	695b      	ldr	r3, [r3, #20]
 80007b8:	78fa      	ldrb	r2, [r7, #3]
 80007ba:	2101      	movs	r1, #1
 80007bc:	fa01 f202 	lsl.w	r2, r1, r2
 80007c0:	405a      	eors	r2, r3
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	615a      	str	r2, [r3, #20]
}
 80007c6:	bf00      	nop
 80007c8:	370c      	adds	r7, #12
 80007ca:	46bd      	mov	sp, r7
 80007cc:	bc80      	pop	{r7}
 80007ce:	4770      	bx	lr

080007d0 <GPIO_IRQITConfig>:
 * @brief   enable/disable an IRQ in the NVIC for a given GPIO line.
 * @param  IRQNum  : IRQ number corresponding to EXTI line
 * @param  EnorDi  : ENABLE to enable the interrupt; DISABLE to disable it
 * @return None
 */
void GPIO_IRQITConfig(uint8_t IRQNum, uint8_t EnorDi){
 80007d0:	b480      	push	{r7}
 80007d2:	b083      	sub	sp, #12
 80007d4:	af00      	add	r7, sp, #0
 80007d6:	4603      	mov	r3, r0
 80007d8:	460a      	mov	r2, r1
 80007da:	71fb      	strb	r3, [r7, #7]
 80007dc:	4613      	mov	r3, r2
 80007de:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE){
 80007e0:	79bb      	ldrb	r3, [r7, #6]
 80007e2:	2b01      	cmp	r3, #1
 80007e4:	d133      	bne.n	800084e <GPIO_IRQITConfig+0x7e>
		if(IRQNum <=31){
 80007e6:	79fb      	ldrb	r3, [r7, #7]
 80007e8:	2b1f      	cmp	r3, #31
 80007ea:	d80a      	bhi.n	8000802 <GPIO_IRQITConfig+0x32>
			*NVIC_ISER0 |= (1<<IRQNum);
 80007ec:	4b34      	ldr	r3, [pc, #208]	@ (80008c0 <GPIO_IRQITConfig+0xf0>)
 80007ee:	681b      	ldr	r3, [r3, #0]
 80007f0:	79fa      	ldrb	r2, [r7, #7]
 80007f2:	2101      	movs	r1, #1
 80007f4:	fa01 f202 	lsl.w	r2, r1, r2
 80007f8:	4611      	mov	r1, r2
 80007fa:	4a31      	ldr	r2, [pc, #196]	@ (80008c0 <GPIO_IRQITConfig+0xf0>)
 80007fc:	430b      	orrs	r3, r1
 80007fe:	6013      	str	r3, [r2, #0]
		}

	}


}
 8000800:	e059      	b.n	80008b6 <GPIO_IRQITConfig+0xe6>
		else if(IRQNum >31 && IRQNum<64){
 8000802:	79fb      	ldrb	r3, [r7, #7]
 8000804:	2b1f      	cmp	r3, #31
 8000806:	d90f      	bls.n	8000828 <GPIO_IRQITConfig+0x58>
 8000808:	79fb      	ldrb	r3, [r7, #7]
 800080a:	2b3f      	cmp	r3, #63	@ 0x3f
 800080c:	d80c      	bhi.n	8000828 <GPIO_IRQITConfig+0x58>
			*NVIC_ISER1 |= (1<<(IRQNum%32));
 800080e:	4b2d      	ldr	r3, [pc, #180]	@ (80008c4 <GPIO_IRQITConfig+0xf4>)
 8000810:	681b      	ldr	r3, [r3, #0]
 8000812:	79fa      	ldrb	r2, [r7, #7]
 8000814:	f002 021f 	and.w	r2, r2, #31
 8000818:	2101      	movs	r1, #1
 800081a:	fa01 f202 	lsl.w	r2, r1, r2
 800081e:	4611      	mov	r1, r2
 8000820:	4a28      	ldr	r2, [pc, #160]	@ (80008c4 <GPIO_IRQITConfig+0xf4>)
 8000822:	430b      	orrs	r3, r1
 8000824:	6013      	str	r3, [r2, #0]
 8000826:	e046      	b.n	80008b6 <GPIO_IRQITConfig+0xe6>
		else if(IRQNum>=64 && IRQNum<96){
 8000828:	79fb      	ldrb	r3, [r7, #7]
 800082a:	2b3f      	cmp	r3, #63	@ 0x3f
 800082c:	d943      	bls.n	80008b6 <GPIO_IRQITConfig+0xe6>
 800082e:	79fb      	ldrb	r3, [r7, #7]
 8000830:	2b5f      	cmp	r3, #95	@ 0x5f
 8000832:	d840      	bhi.n	80008b6 <GPIO_IRQITConfig+0xe6>
			*NVIC_ISER3 |= (1<<(IRQNum%64));
 8000834:	4b24      	ldr	r3, [pc, #144]	@ (80008c8 <GPIO_IRQITConfig+0xf8>)
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	79fa      	ldrb	r2, [r7, #7]
 800083a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800083e:	2101      	movs	r1, #1
 8000840:	fa01 f202 	lsl.w	r2, r1, r2
 8000844:	4611      	mov	r1, r2
 8000846:	4a20      	ldr	r2, [pc, #128]	@ (80008c8 <GPIO_IRQITConfig+0xf8>)
 8000848:	430b      	orrs	r3, r1
 800084a:	6013      	str	r3, [r2, #0]
}
 800084c:	e033      	b.n	80008b6 <GPIO_IRQITConfig+0xe6>
		if(IRQNum <=31){
 800084e:	79fb      	ldrb	r3, [r7, #7]
 8000850:	2b1f      	cmp	r3, #31
 8000852:	d80a      	bhi.n	800086a <GPIO_IRQITConfig+0x9a>
			*NVIC_ICER0 |= (1<<IRQNum);
 8000854:	4b1d      	ldr	r3, [pc, #116]	@ (80008cc <GPIO_IRQITConfig+0xfc>)
 8000856:	681b      	ldr	r3, [r3, #0]
 8000858:	79fa      	ldrb	r2, [r7, #7]
 800085a:	2101      	movs	r1, #1
 800085c:	fa01 f202 	lsl.w	r2, r1, r2
 8000860:	4611      	mov	r1, r2
 8000862:	4a1a      	ldr	r2, [pc, #104]	@ (80008cc <GPIO_IRQITConfig+0xfc>)
 8000864:	430b      	orrs	r3, r1
 8000866:	6013      	str	r3, [r2, #0]
}
 8000868:	e025      	b.n	80008b6 <GPIO_IRQITConfig+0xe6>
		else if(IRQNum >31 && IRQNum<64){
 800086a:	79fb      	ldrb	r3, [r7, #7]
 800086c:	2b1f      	cmp	r3, #31
 800086e:	d90f      	bls.n	8000890 <GPIO_IRQITConfig+0xc0>
 8000870:	79fb      	ldrb	r3, [r7, #7]
 8000872:	2b3f      	cmp	r3, #63	@ 0x3f
 8000874:	d80c      	bhi.n	8000890 <GPIO_IRQITConfig+0xc0>
			*NVIC_ICER1 |= (1<<(IRQNum%32));
 8000876:	4b16      	ldr	r3, [pc, #88]	@ (80008d0 <GPIO_IRQITConfig+0x100>)
 8000878:	681b      	ldr	r3, [r3, #0]
 800087a:	79fa      	ldrb	r2, [r7, #7]
 800087c:	f002 021f 	and.w	r2, r2, #31
 8000880:	2101      	movs	r1, #1
 8000882:	fa01 f202 	lsl.w	r2, r1, r2
 8000886:	4611      	mov	r1, r2
 8000888:	4a11      	ldr	r2, [pc, #68]	@ (80008d0 <GPIO_IRQITConfig+0x100>)
 800088a:	430b      	orrs	r3, r1
 800088c:	6013      	str	r3, [r2, #0]
 800088e:	e012      	b.n	80008b6 <GPIO_IRQITConfig+0xe6>
		else if(IRQNum>=64 && IRQNum<96){
 8000890:	79fb      	ldrb	r3, [r7, #7]
 8000892:	2b3f      	cmp	r3, #63	@ 0x3f
 8000894:	d90f      	bls.n	80008b6 <GPIO_IRQITConfig+0xe6>
 8000896:	79fb      	ldrb	r3, [r7, #7]
 8000898:	2b5f      	cmp	r3, #95	@ 0x5f
 800089a:	d80c      	bhi.n	80008b6 <GPIO_IRQITConfig+0xe6>
			*NVIC_ICER3 |= (1<<(IRQNum%64));
 800089c:	4b0d      	ldr	r3, [pc, #52]	@ (80008d4 <GPIO_IRQITConfig+0x104>)
 800089e:	681b      	ldr	r3, [r3, #0]
 80008a0:	79fa      	ldrb	r2, [r7, #7]
 80008a2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80008a6:	2101      	movs	r1, #1
 80008a8:	fa01 f202 	lsl.w	r2, r1, r2
 80008ac:	4611      	mov	r1, r2
 80008ae:	4a09      	ldr	r2, [pc, #36]	@ (80008d4 <GPIO_IRQITConfig+0x104>)
 80008b0:	430b      	orrs	r3, r1
 80008b2:	6013      	str	r3, [r2, #0]
}
 80008b4:	e7ff      	b.n	80008b6 <GPIO_IRQITConfig+0xe6>
 80008b6:	bf00      	nop
 80008b8:	370c      	adds	r7, #12
 80008ba:	46bd      	mov	sp, r7
 80008bc:	bc80      	pop	{r7}
 80008be:	4770      	bx	lr
 80008c0:	e000e100 	.word	0xe000e100
 80008c4:	e000e104 	.word	0xe000e104
 80008c8:	e000e10c 	.word	0xe000e10c
 80008cc:	e000e180 	.word	0xe000e180
 80008d0:	e000e184 	.word	0xe000e184
 80008d4:	e000e18c 	.word	0xe000e18c

080008d8 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNum, uint8_t IRQPriority){
 80008d8:	b480      	push	{r7}
 80008da:	b085      	sub	sp, #20
 80008dc:	af00      	add	r7, sp, #0
 80008de:	4603      	mov	r3, r0
 80008e0:	460a      	mov	r2, r1
 80008e2:	71fb      	strb	r3, [r7, #7]
 80008e4:	4613      	mov	r3, r2
 80008e6:	71bb      	strb	r3, [r7, #6]
	uint8_t iprx = IRQNum / 4;
 80008e8:	79fb      	ldrb	r3, [r7, #7]
 80008ea:	089b      	lsrs	r3, r3, #2
 80008ec:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNum %4;
 80008ee:	79fb      	ldrb	r3, [r7, #7]
 80008f0:	f003 0303 	and.w	r3, r3, #3
 80008f4:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8*iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 80008f6:	7bbb      	ldrb	r3, [r7, #14]
 80008f8:	00db      	lsls	r3, r3, #3
 80008fa:	b2db      	uxtb	r3, r3
 80008fc:	3304      	adds	r3, #4
 80008fe:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx * 4) |= IRQPriority << shift_amount;
 8000900:	7bfb      	ldrb	r3, [r7, #15]
 8000902:	011b      	lsls	r3, r3, #4
 8000904:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000908:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 800090c:	681a      	ldr	r2, [r3, #0]
 800090e:	79b9      	ldrb	r1, [r7, #6]
 8000910:	7b7b      	ldrb	r3, [r7, #13]
 8000912:	fa01 f303 	lsl.w	r3, r1, r3
 8000916:	4619      	mov	r1, r3
 8000918:	7bfb      	ldrb	r3, [r7, #15]
 800091a:	011b      	lsls	r3, r3, #4
 800091c:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000920:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000924:	430a      	orrs	r2, r1
 8000926:	601a      	str	r2, [r3, #0]


}
 8000928:	bf00      	nop
 800092a:	3714      	adds	r7, #20
 800092c:	46bd      	mov	sp, r7
 800092e:	bc80      	pop	{r7}
 8000930:	4770      	bx	lr
	...

08000934 <GPIO_IRQHandling>:
 * @brief  Handle the pending EXTI interrupt for a specific GPIO pin.
 *         Clears the interrupt pending bit.
 * @param  PinNum : GPIO pin number for which to clear the EXTI flag
 * @return None
 */
void GPIO_IRQHandling(uint8_t PinNum){
 8000934:	b480      	push	{r7}
 8000936:	b083      	sub	sp, #12
 8000938:	af00      	add	r7, sp, #0
 800093a:	4603      	mov	r3, r0
 800093c:	71fb      	strb	r3, [r7, #7]
	//clear the EXTI PR reg
	if(EXTI->PR & (1<<PinNum)){
 800093e:	4b0c      	ldr	r3, [pc, #48]	@ (8000970 <GPIO_IRQHandling+0x3c>)
 8000940:	695b      	ldr	r3, [r3, #20]
 8000942:	79fa      	ldrb	r2, [r7, #7]
 8000944:	2101      	movs	r1, #1
 8000946:	fa01 f202 	lsl.w	r2, r1, r2
 800094a:	4013      	ands	r3, r2
 800094c:	2b00      	cmp	r3, #0
 800094e:	d009      	beq.n	8000964 <GPIO_IRQHandling+0x30>
		//clear by writing 1
		EXTI->PR |= (1<<PinNum);
 8000950:	4b07      	ldr	r3, [pc, #28]	@ (8000970 <GPIO_IRQHandling+0x3c>)
 8000952:	695b      	ldr	r3, [r3, #20]
 8000954:	79fa      	ldrb	r2, [r7, #7]
 8000956:	2101      	movs	r1, #1
 8000958:	fa01 f202 	lsl.w	r2, r1, r2
 800095c:	4611      	mov	r1, r2
 800095e:	4a04      	ldr	r2, [pc, #16]	@ (8000970 <GPIO_IRQHandling+0x3c>)
 8000960:	430b      	orrs	r3, r1
 8000962:	6153      	str	r3, [r2, #20]
	}


}
 8000964:	bf00      	nop
 8000966:	370c      	adds	r7, #12
 8000968:	46bd      	mov	sp, r7
 800096a:	bc80      	pop	{r7}
 800096c:	4770      	bx	lr
 800096e:	bf00      	nop
 8000970:	40013c00 	.word	0x40013c00

08000974 <__libc_init_array>:
 8000974:	b570      	push	{r4, r5, r6, lr}
 8000976:	4d0d      	ldr	r5, [pc, #52]	@ (80009ac <__libc_init_array+0x38>)
 8000978:	4c0d      	ldr	r4, [pc, #52]	@ (80009b0 <__libc_init_array+0x3c>)
 800097a:	1b64      	subs	r4, r4, r5
 800097c:	10a4      	asrs	r4, r4, #2
 800097e:	2600      	movs	r6, #0
 8000980:	42a6      	cmp	r6, r4
 8000982:	d109      	bne.n	8000998 <__libc_init_array+0x24>
 8000984:	4d0b      	ldr	r5, [pc, #44]	@ (80009b4 <__libc_init_array+0x40>)
 8000986:	4c0c      	ldr	r4, [pc, #48]	@ (80009b8 <__libc_init_array+0x44>)
 8000988:	f000 f818 	bl	80009bc <_init>
 800098c:	1b64      	subs	r4, r4, r5
 800098e:	10a4      	asrs	r4, r4, #2
 8000990:	2600      	movs	r6, #0
 8000992:	42a6      	cmp	r6, r4
 8000994:	d105      	bne.n	80009a2 <__libc_init_array+0x2e>
 8000996:	bd70      	pop	{r4, r5, r6, pc}
 8000998:	f855 3b04 	ldr.w	r3, [r5], #4
 800099c:	4798      	blx	r3
 800099e:	3601      	adds	r6, #1
 80009a0:	e7ee      	b.n	8000980 <__libc_init_array+0xc>
 80009a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80009a6:	4798      	blx	r3
 80009a8:	3601      	adds	r6, #1
 80009aa:	e7f2      	b.n	8000992 <__libc_init_array+0x1e>
 80009ac:	080009d4 	.word	0x080009d4
 80009b0:	080009d4 	.word	0x080009d4
 80009b4:	080009d4 	.word	0x080009d4
 80009b8:	080009d8 	.word	0x080009d8

080009bc <_init>:
 80009bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009be:	bf00      	nop
 80009c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009c2:	bc08      	pop	{r3}
 80009c4:	469e      	mov	lr, r3
 80009c6:	4770      	bx	lr

080009c8 <_fini>:
 80009c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ca:	bf00      	nop
 80009cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009ce:	bc08      	pop	{r3}
 80009d0:	469e      	mov	lr, r3
 80009d2:	4770      	bx	lr
